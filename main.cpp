// Info for this file (does NOT apply to sound024.wav):
// Copyright: hexagonrecursion
// License: CC0 1.0 Universal

#include <AL/alc.h>
#include <AL/al.h>
#include <stdexcept>
#include <string>	
#include <audio/wave.h>
#include <vector>
#include <unistd.h>

void checkNull(void *p) {
    if(p == nullptr) throw std::runtime_error("unexpected nullptr");
}

void checkError() {
    ALenum error = alGetError();
    switch(error) {
        case AL_NO_ERROR: return;
        case ALC_INVALID_VALUE: throw std::runtime_error("ALC_INVALID_VALUE");
        case ALC_INVALID_DEVICE: throw std::runtime_error("ALC_INVALID_DEVICE");
        default: std::runtime_error("unknown openal error: " + std::to_string(error));
    }
}

void replayAnimation(ALuint source);

int main() {
    // Make context
    ALCdevice *device = alcOpenDevice(nullptr);
    checkNull(device);
    alGetError();
    ALCcontext *context = alcCreateContext(device, nullptr);
    //checkError(); ???????????
    checkNull(context);
    if (!alcMakeContextCurrent(context)) throw std::runtime_error("alcMakeContextCurrent failed");
    checkError();

    // Make buffer and source
    ALuint buffer, source;
    alGenBuffers((ALsizei)1, &buffer);
    checkError();
    alGenSources((ALsizei)1, &source);
    checkError();

    // Init listener
    alListener3f(AL_POSITION, 0, 0, 0);
    checkError();
    ALfloat listenerOri[] = {1.0f, 0.0f, 0.0f, 0.0f, -1.0f, 0.0f};
    alListenerfv(AL_ORIENTATION, listenerOri);
    checkError();
    alListener3f(AL_VELOCITY, 0, 0, 0);
    checkError();

    // Init buffer
    WaveInfo *wave = WaveOpenFileForReading("sound024.wav");
    checkNull(wave);
    if(WaveSeekFile(0, wave)) throw std::runtime_error("waveseekfile failed");
    int dataSize = static_cast<int>(wave->dataSize);
    std::vector<char> data(dataSize);
    if (WaveReadFile(data.data(), dataSize, wave) != dataSize) throw std::runtime_error("WaveReadFile failed");
    ALenum format;
    if (wave->bitsPerSample == 8) {
        if (wave->channels > 1) {
            format = AL_FORMAT_STEREO8;
        } else {
            format = AL_FORMAT_MONO8;
        }
    } else if (wave->bitsPerSample == 16) {
        if (wave->channels > 1) {
            format = AL_FORMAT_STEREO16;
        } else {
            format = AL_FORMAT_MONO16;
        }
    } else {
        throw std::runtime_error("unsuported");
    }
    alBufferData(buffer, format, data.data(), dataSize, wave->sampleRate);
    checkError();

    // Init source
    alSource3f(source, AL_POSITION, 0, 0, 0);
    checkError();
    alSource3f(source, AL_VELOCITY, 0, 0, 0);
    checkError();
    alSourcei(source, AL_SOURCE_RELATIVE, AL_FALSE);
    checkError();
    alSourcei(source, AL_LOOPING, AL_TRUE);
    checkError();
	alSourcei(source, AL_BUFFER, buffer);
    checkError();
    alSourcef(source, AL_PITCH, 1);
    checkError();
    alSourcef(source, AL_GAIN, 1);
    checkError();

    alSourcePlay(source);
    checkError();

    replayAnimation(source);

    return 0;
}

void replayAnimation(ALuint source) {
    alListener3f(AL_POSITION, -149.974274, 131.966995, -3.493549);
    usleep(34766); checkError();
    alSource3f(source, AL_POSITION, -149.974274, 131.966995, -3.493549);
    usleep(1579); checkError();
    alListener3f(AL_POSITION, -149.568924, 131.823685, -8.098455);
    usleep(35315); checkError();
    alListener3f(AL_POSITION, -149.302429, 131.729462, -11.125968);
    usleep(27445); checkError();
    alSource3f(source, AL_POSITION, -149.302429, 131.729462, -11.125968);
    usleep(1789); checkError();
    alListener3f(AL_POSITION, -148.463974, 131.736481, -17.130896);
    usleep(41975); checkError();
    alListener3f(AL_POSITION, -147.939209, 131.740875, -20.889250);
    usleep(28441); checkError();
    alSource3f(source, AL_POSITION, -147.939209, 131.740875, -20.889250);
    usleep(2049); checkError();
    alListener3f(AL_POSITION, -146.636078, 131.769394, -27.384396);
    usleep(37831); checkError();
    alListener3f(AL_POSITION, -145.870102, 131.786163, -31.202196);
    usleep(25618); checkError();
    alSource3f(source, AL_POSITION, -145.870102, 131.786163, -31.202196);
    usleep(1701); checkError();
    alListener3f(AL_POSITION, -144.243118, 131.748627, -37.321186);
    usleep(40336); checkError();
    alListener3f(AL_POSITION, -143.213562, 131.724869, -41.193310);
    usleep(31942); checkError();
    alSource3f(source, AL_POSITION, -143.213562, 131.724869, -41.193310);
    usleep(1965); checkError();
    alListener3f(AL_POSITION, -141.193237, 131.694092, -47.201195);
    usleep(42862); checkError();
    alListener3f(AL_POSITION, -139.702454, 131.671387, -51.634361);
    usleep(33361); checkError();
    alSource3f(source, AL_POSITION, -139.702454, 131.671387, -51.634361);
    usleep(1893); checkError();
    alListener3f(AL_POSITION, -136.683014, 131.645035, -58.764008);
    usleep(42159); checkError();
    alListener3f(AL_POSITION, -134.872482, 131.629242, -63.039101);
    usleep(31254); checkError();
    alSource3f(source, AL_POSITION, -134.872482, 131.629242, -63.039101);
    usleep(915); checkError();
    usleep(680); checkError();
    alListener3f(AL_POSITION, -131.238327, 131.616516, -70.000397);
    usleep(32713); checkError();
    alListener3f(AL_POSITION, -129.468262, 131.610321, -73.390968);
    usleep(33568); checkError();
    alSource3f(source, AL_POSITION, -129.468262, 131.610321, -73.390968);
    usleep(1560); checkError();
    alListener3f(AL_POSITION, -126.306816, 131.569321, -78.543846);
    usleep(35009); checkError();
    alListener3f(AL_POSITION, -124.026230, 131.539734, -82.261002);
    usleep(32015); checkError();
    alSource3f(source, AL_POSITION, -124.026230, 131.539734, -82.261002);
    usleep(1657); checkError();
    alListener3f(AL_POSITION, -119.906059, 131.465469, -87.968391);
    usleep(36320); checkError();
    alListener3f(AL_POSITION, -117.441933, 131.421051, -91.381775);
    usleep(35022); checkError();
    alSource3f(source, AL_POSITION, -117.441933, 131.421051, -91.381775);
    usleep(2012); checkError();
    alListener3f(AL_POSITION, -113.112907, 131.401047, -96.534210);
    usleep(33395); checkError();
    alListener3f(AL_POSITION, -110.379425, 131.388412, -99.787621);
    usleep(32821); checkError();
    alSource3f(source, AL_POSITION, -110.379425, 131.388412, -99.787621);
    usleep(1510); checkError();
    alListener3f(AL_POSITION, -105.640739, 131.487839, -104.648567);
    usleep(36419); checkError();
    alListener3f(AL_POSITION, -102.642563, 131.550751, -107.724098);
    usleep(34017); checkError();
    alSource3f(source, AL_POSITION, -102.642563, 131.550751, -107.724098);
    usleep(1568); checkError();
    alListener3f(AL_POSITION, -97.480980, 131.736679, -112.282318);
    usleep(35285); checkError();
    alListener3f(AL_POSITION, -94.268082, 131.852402, -115.119644);
    usleep(41365); checkError();
    alSource3f(source, AL_POSITION, -94.268082, 131.852402, -115.119644);
    usleep(2337); checkError();
    alListener3f(AL_POSITION, -88.786293, 132.085815, -119.274132);
    usleep(37471); checkError();
    alListener3f(AL_POSITION, -84.889809, 132.251724, -122.227165);
    usleep(32920); checkError();
    alSource3f(source, AL_POSITION, -84.889809, 132.251724, -122.227165);
    usleep(1629); checkError();
    alListener3f(AL_POSITION, -77.870483, 132.569016, -126.662880);
    usleep(36995); checkError();
    alListener3f(AL_POSITION, -74.369392, 132.727280, -128.875320);
    usleep(32795); checkError();
    alSource3f(source, AL_POSITION, -74.369392, 132.727280, -128.875320);
    usleep(925); checkError();
    usleep(123); checkError();
    usleep(640); checkError();
    alListener3f(AL_POSITION, -68.367477, 133.000702, -132.054749);
    usleep(32010); checkError();
    alListener3f(AL_POSITION, -64.887634, 133.159225, -133.898148);
    usleep(35498); checkError();
    alSource3f(source, AL_POSITION, -64.887634, 133.159225, -133.898148);
    usleep(1312); checkError();
    usleep(894); checkError();
    alListener3f(AL_POSITION, -59.217384, 133.415466, -136.408264);
    usleep(40623); checkError();
    alListener3f(AL_POSITION, -54.884739, 133.611252, -138.326248);
    usleep(30793); checkError();
    alSource3f(source, AL_POSITION, -54.884739, 133.611252, -138.326248);
    usleep(2466); checkError();
    alListener3f(AL_POSITION, -47.442005, 133.942383, -140.920502);
    usleep(36855); checkError();
    alListener3f(AL_POSITION, -43.568115, 134.114731, -142.270798);
    usleep(32525); checkError();
    alSource3f(source, AL_POSITION, -43.568115, 134.114731, -142.270798);
    usleep(1714); checkError();
    alListener3f(AL_POSITION, -37.183632, 134.394623, -143.977905);
    usleep(31859); checkError();
    alListener3f(AL_POSITION, -33.418659, 134.559677, -144.984589);
    usleep(31178); checkError();
    alSource3f(source, AL_POSITION, -33.418659, 134.559677, -144.984589);
    usleep(1848); checkError();
    alListener3f(AL_POSITION, -27.476328, 134.817200, -146.142990);
    usleep(38884); checkError();
    alListener3f(AL_POSITION, -23.158560, 135.004318, -146.984695);
    usleep(30231); checkError();
    alSource3f(source, AL_POSITION, -23.158560, 135.004318, -146.984695);
    usleep(1519); checkError();
    alListener3f(AL_POSITION, -16.168242, 135.304520, -147.809189);
    usleep(33659); checkError();
    alListener3f(AL_POSITION, -12.246152, 135.472946, -148.271790);
    usleep(28055); checkError();
    alSource3f(source, AL_POSITION, -12.246152, 135.472946, -148.271790);
    usleep(2042); checkError();
    alListener3f(AL_POSITION, -6.128519, 135.734543, -148.567154);
    usleep(36680); checkError();
    alListener3f(AL_POSITION, -2.045098, 135.909149, -148.764297);
    usleep(30957); checkError();
    alSource3f(source, AL_POSITION, -2.045098, 135.909149, -148.764297);
    usleep(1649); checkError();
    alListener3f(AL_POSITION, 4.296827, 136.218994, -148.625931);
    usleep(35517); checkError();
    alListener3f(AL_POSITION, 8.477728, 136.423248, -148.534714);
    usleep(26781); checkError();
    alSource3f(source, AL_POSITION, 8.477728, 136.423248, -148.534714);
    usleep(2018); checkError();
    alListener3f(AL_POSITION, 14.979559, 136.765854, -147.926407);
    usleep(38518); checkError();
    alListener3f(AL_POSITION, 19.103109, 136.983139, -147.540604);
    usleep(24461); checkError();
    alSource3f(source, AL_POSITION, 19.103109, 136.983139, -147.540604);
    usleep(2153); checkError();
    alListener3f(AL_POSITION, 25.473944, 137.260239, -146.483063);
    usleep(37429); checkError();
    alListener3f(AL_POSITION, 29.337194, 137.428268, -145.841782);
    usleep(28682); checkError();
    alSource3f(source, AL_POSITION, 29.337194, 137.428268, -145.841782);
    usleep(3371); checkError();
    alListener3f(AL_POSITION, 35.156250, 137.645020, -144.466858);
    usleep(38266); checkError();
    alListener3f(AL_POSITION, 39.384087, 137.802505, -143.467911);
    usleep(31897); checkError();
    alSource3f(source, AL_POSITION, 39.384087, 137.802505, -143.467911);
    usleep(1476); checkError();
    alListener3f(AL_POSITION, 45.910236, 138.218140, -141.409363);
    usleep(38809); checkError();
    alListener3f(AL_POSITION, 50.101204, 138.485062, -140.087402);
    usleep(29309); checkError();
    alSource3f(source, AL_POSITION, 50.101204, 138.485062, -140.087402);
    usleep(3422); checkError();
    alListener3f(AL_POSITION, 56.646614, 139.230606, -137.462158);
    usleep(51897); checkError();
    alListener3f(AL_POSITION, 61.486351, 139.781860, -135.521027);
    usleep(26234); checkError();
    alSource3f(source, AL_POSITION, 61.486351, 139.781860, -135.521027);
    usleep(2461); checkError();
    alListener3f(AL_POSITION, 69.618439, 141.207413, -131.370132);
    usleep(38954); checkError();
    alListener3f(AL_POSITION, 73.038269, 141.806915, -129.624527);
    usleep(30519); checkError();
    alSource3f(source, AL_POSITION, 73.038269, 141.806915, -129.624527);
    usleep(1480); checkError();
    alListener3f(AL_POSITION, 78.386269, 142.967270, -126.377022);
    usleep(39563); checkError();
    alListener3f(AL_POSITION, 82.013550, 143.754272, -124.174400);
    usleep(31349); checkError();
    alSource3f(source, AL_POSITION, 82.013550, 143.754272, -124.174400);
    usleep(1593); checkError();
    alListener3f(AL_POSITION, 87.629959, 145.185349, -120.154518);
    usleep(35830); checkError();
    alListener3f(AL_POSITION, 90.970886, 146.036621, -117.763283);
    usleep(25493); checkError();
    alSource3f(source, AL_POSITION, 90.970886, 146.036621, -117.763283);
    usleep(1523); checkError();
    usleep(1107); checkError();
    alListener3f(AL_POSITION, 95.987053, 147.147217, -113.591232);
    usleep(40273); checkError();
    alListener3f(AL_POSITION, 99.147598, 147.846970, -110.962540);
    usleep(26960); checkError();
    alSource3f(source, AL_POSITION, 99.147598, 147.846970, -110.962540);
    usleep(1568); checkError();
    alListener3f(AL_POSITION, 103.811638, 148.546112, -106.480980);
    usleep(33651); checkError();
    alListener3f(AL_POSITION, 106.531815, 148.953873, -103.867233);
    usleep(28767); checkError();
    alSource3f(source, AL_POSITION, 106.531815, 148.953873, -103.867233);
    usleep(4048); checkError();
    alListener3f(AL_POSITION, 110.394135, 149.383224, -99.635582);
    usleep(47676); checkError();
    alListener3f(AL_POSITION, 113.748726, 149.756134, -95.960213);
    usleep(23635); checkError();
    alSource3f(source, AL_POSITION, 113.748726, 149.756134, -95.960213);
    usleep(3015); checkError();
    alListener3f(AL_POSITION, 118.808281, 149.877045, -89.394173);
    usleep(36614); checkError();
    alListener3f(AL_POSITION, 121.076202, 149.931244, -86.450974);
    usleep(28591); checkError();
    alSource3f(source, AL_POSITION, 121.076202, 149.931244, -86.450974);
    usleep(1985); checkError();
    alListener3f(AL_POSITION, 124.284691, 149.640839, -81.643051);
    usleep(39263); checkError();
    alListener3f(AL_POSITION, 126.625725, 149.428940, -78.135010);
    usleep(32943); checkError();
    alSource3f(source, AL_POSITION, 126.625725, 149.428940, -78.135010);
    usleep(1670); checkError();
    alListener3f(AL_POSITION, 129.920151, 148.781693, -72.324203);
    usleep(33032); checkError();
    alListener3f(AL_POSITION, 131.922531, 148.388290, -68.792351);
    usleep(25405); checkError();
    alSource3f(source, AL_POSITION, 131.922531, 148.388290, -68.792351);
    usleep(2265); checkError();
    alListener3f(AL_POSITION, 134.646744, 147.871674, -63.086220);
    usleep(45746); checkError();
    alListener3f(AL_POSITION, 136.593445, 147.502502, -59.008675);
    usleep(24288); checkError();
    alSource3f(source, AL_POSITION, 136.593445, 147.502502, -59.008675);
    usleep(2596); checkError();
    alListener3f(AL_POSITION, 139.239746, 146.153732, -52.148460);
    usleep(32866); checkError();
    alListener3f(AL_POSITION, 140.536621, 145.492737, -48.786453);
    usleep(29829); checkError();
    alSource3f(source, AL_POSITION, 140.536621, 145.492737, -48.786453);
    usleep(2344); checkError();
    alListener3f(AL_POSITION, 142.199982, 143.466202, -43.485615);
    usleep(40077); checkError();
    alListener3f(AL_POSITION, 143.555084, 141.815247, -39.167179);
    usleep(30575); checkError();
    alSource3f(source, AL_POSITION, 143.555084, 141.815247, -39.167179);
    usleep(1364); checkError();
    usleep(557); checkError();
    usleep(1049); checkError();
    alListener3f(AL_POSITION, 145.266296, 137.192047, -31.797159);
    usleep(34512); checkError();
    alListener3f(AL_POSITION, 146.216492, 134.624863, -27.704720);
    usleep(32287); checkError();
    alSource3f(source, AL_POSITION, 146.216492, 134.624863, -27.704720);
    usleep(2192); checkError();
    alListener3f(AL_POSITION, 147.259521, 129.980530, -20.995087);
    usleep(44914); checkError();
    alListener3f(AL_POSITION, 148.005325, 126.659691, -16.197481);
    usleep(38483); checkError();
    alSource3f(source, AL_POSITION, 148.005325, 126.659691, -16.197481);
    usleep(2394); checkError();
    alListener3f(AL_POSITION, 148.567688, 121.741272, -8.037066);
    usleep(37715); checkError();
    alListener3f(AL_POSITION, 148.874985, 119.053764, -3.578080);
    usleep(37157); checkError();
    alSource3f(source, AL_POSITION, 148.874985, 119.053764, -3.578080);
    usleep(1523); checkError();
    alListener3f(AL_POSITION, 148.756805, 115.664406, 4.058787);
    usleep(35648); checkError();
    alListener3f(AL_POSITION, 148.692398, 113.817101, 8.221120);
    usleep(31131); checkError();
    alSource3f(source, AL_POSITION, 148.692398, 113.817101, 8.221120);
    usleep(1551); checkError();
    alListener3f(AL_POSITION, 148.025635, 110.937294, 15.298040);
    usleep(37341); checkError();
    alListener3f(AL_POSITION, 147.647888, 109.305771, 19.307394);
    usleep(30359); checkError();
    alSource3f(source, AL_POSITION, 147.647888, 109.305771, 19.307394);
    usleep(1737); checkError();
    alListener3f(AL_POSITION, 146.554947, 107.184402, 25.777084);
    usleep(33340); checkError();
    alListener3f(AL_POSITION, 145.916534, 105.945282, 29.556129);
    usleep(35295); checkError();
    alSource3f(source, AL_POSITION, 145.916534, 105.945282, 29.556129);
    usleep(1627); checkError();
    alListener3f(AL_POSITION, 144.529404, 105.027824, 35.340714);
    usleep(41751); checkError();
    alListener3f(AL_POSITION, 143.434891, 104.303909, 39.904991);
    usleep(33174); checkError();
    alSource3f(source, AL_POSITION, 143.434891, 104.303909, 39.904991);
    usleep(1562); checkError();
    alListener3f(AL_POSITION, 140.997696, 104.817413, 47.371918);
    usleep(32043); checkError();
    alListener3f(AL_POSITION, 139.790558, 105.071747, 51.070255);
    usleep(35651); checkError();
    alSource3f(source, AL_POSITION, 139.790558, 105.071747, 51.070255);
    usleep(2412); checkError();
    alListener3f(AL_POSITION, 137.429474, 106.705597, 56.886971);
    usleep(42316); checkError();
    alListener3f(AL_POSITION, 135.579132, 107.986015, 61.445423);
    usleep(34219); checkError();
    alSource3f(source, AL_POSITION, 135.579132, 107.986015, 61.445423);
    usleep(1604); checkError();
    usleep(621); checkError();
    alListener3f(AL_POSITION, 131.723770, 111.331482, 69.040977);
    usleep(37384); checkError();
    alListener3f(AL_POSITION, 129.781219, 113.017120, 72.868057);
    usleep(32673); checkError();
    alSource3f(source, AL_POSITION, 129.781219, 113.017120, 72.868057);
    usleep(1576); checkError();
    alListener3f(AL_POSITION, 125.997391, 116.247849, 79.056923);
    usleep(32669); checkError();
    alListener3f(AL_POSITION, 123.938278, 118.005974, 82.424828);
    usleep(40880); checkError();
    alSource3f(source, AL_POSITION, 123.938278, 118.005974, 82.424828);
    usleep(1486); checkError();
    alListener3f(AL_POSITION, 120.241844, 120.928810, 87.595360);
    usleep(32915); checkError();
    alListener3f(AL_POSITION, 117.616508, 123.004715, 91.267654);
    usleep(46917); checkError();
    alSource3f(source, AL_POSITION, 117.616508, 123.004715, 91.267654);
    usleep(2493); checkError();
    usleep(266); checkError();
    alListener3f(AL_POSITION, 112.782578, 126.374710, 97.010498);
    usleep(38879); checkError();
    alListener3f(AL_POSITION, 109.448326, 128.699188, 100.971680);
    usleep(39034); checkError();
    alSource3f(source, AL_POSITION, 109.448326, 128.699188, 100.971680);
    usleep(1063); checkError();
    usleep(625); checkError();
    alListener3f(AL_POSITION, 102.839371, 132.203552, 107.493889);
    usleep(31217); checkError();
    alListener3f(AL_POSITION, 100.029152, 133.693649, 110.267227);
    usleep(30875); checkError();
    alSource3f(source, AL_POSITION, 100.029152, 133.693649, 110.267227);
    usleep(2128); checkError();
    alListener3f(AL_POSITION, 94.861626, 136.299530, 114.629341);
    usleep(39053); checkError();
    alListener3f(AL_POSITION, 91.690865, 137.898483, 117.305908);
    usleep(27579); checkError();
    alSource3f(source, AL_POSITION, 91.690865, 137.898483, 117.305908);
    usleep(2128); checkError();
    alListener3f(AL_POSITION, 86.079842, 140.659088, 121.358154);
    usleep(36842); checkError();
    alListener3f(AL_POSITION, 82.922928, 142.212280, 123.638054);
    usleep(27745); checkError();
    alSource3f(source, AL_POSITION, 82.922928, 142.212280, 123.638054);
    usleep(2263); checkError();
    alListener3f(AL_POSITION, 77.641380, 144.779984, 126.918747);
    usleep(42256); checkError();
    alListener3f(AL_POSITION, 73.950218, 146.574493, 129.211548);
    usleep(32624); checkError();
    alSource3f(source, AL_POSITION, 73.950218, 146.574493, 129.211548);
    usleep(1880); checkError();
    alListener3f(AL_POSITION, 67.793808, 148.578156, 132.422958);
    usleep(32958); checkError();
    alListener3f(AL_POSITION, 64.262421, 149.727478, 134.265060);
    usleep(28003); checkError();
    alSource3f(source, AL_POSITION, 64.262421, 149.727478, 134.265060);
    usleep(1999); checkError();
    alListener3f(AL_POSITION, 58.514339, 150.919098, 136.765854);
    usleep(35384); checkError();
    alListener3f(AL_POSITION, 54.912655, 151.665756, 138.332825);
    usleep(25434); checkError();
    alSource3f(source, AL_POSITION, 54.912655, 151.665756, 138.332825);
    usleep(2119); checkError();
    alListener3f(AL_POSITION, 49.173439, 152.400711, 140.377365);
    usleep(33579); checkError();
    alListener3f(AL_POSITION, 45.685085, 152.847427, 141.620056);
    usleep(25699); checkError();
    alSource3f(source, AL_POSITION, 45.685085, 152.847427, 141.620056);
    usleep(2010); checkError();
    usleep(1413); checkError();
    alListener3f(AL_POSITION, 40.336285, 153.349731, 143.151520);
    usleep(40728); checkError();
    alListener3f(AL_POSITION, 36.136646, 153.744110, 144.353958);
    usleep(30915); checkError();
    alSource3f(source, AL_POSITION, 36.136646, 153.744110, 144.353958);
    usleep(1736); checkError();
    alListener3f(AL_POSITION, 29.417440, 154.223190, 145.759781);
    usleep(34296); checkError();
    alListener3f(AL_POSITION, 25.396255, 154.509903, 146.601105);
    usleep(23316); checkError();
    alSource3f(source, AL_POSITION, 25.396255, 154.509903, 146.601105);
    usleep(1630); checkError();
    alListener3f(AL_POSITION, 19.051403, 154.884247, 147.467041);
    usleep(41141); checkError();
    alListener3f(AL_POSITION, 15.053412, 155.120117, 148.012680);
    usleep(23044); checkError();
    alSource3f(source, AL_POSITION, 15.053412, 155.120117, 148.012680);
    usleep(1803); checkError();
    alListener3f(AL_POSITION, 8.834650, 155.444153, 148.425934);
    usleep(35033); checkError();
    alListener3f(AL_POSITION, 5.175892, 155.634796, 148.669067);
    usleep(22639); checkError();
    alSource3f(source, AL_POSITION, 5.175892, 155.634796, 148.669067);
    usleep(4765); checkError();
    alListener3f(AL_POSITION, -0.271314, 155.898895, 148.688065);
    usleep(51259); checkError();
    alListener3f(AL_POSITION, -5.209187, 156.138290, 148.705292);
    usleep(25167); checkError();
    alSource3f(source, AL_POSITION, -5.209187, 156.138290, 148.705292);
    usleep(2053); checkError();
    alListener3f(AL_POSITION, -13.277073, 156.509140, 148.073349);
    usleep(38051); checkError();
    alListener3f(AL_POSITION, -17.114349, 156.685516, 147.772781);
    usleep(22783); checkError();
    alSource3f(source, AL_POSITION, -17.114349, 156.685516, 147.772781);
    usleep(2057); checkError();
    alListener3f(AL_POSITION, -23.048347, 156.952957, 146.889648);
    usleep(48644); checkError();
    alListener3f(AL_POSITION, -27.451056, 157.151382, 146.234421);
    usleep(21552); checkError();
    alSource3f(source, AL_POSITION, -27.451056, 157.151382, 146.234421);
    usleep(2033); checkError();
    alListener3f(AL_POSITION, -34.451504, 157.465775, 144.636124);
    usleep(43501); checkError();
    alListener3f(AL_POSITION, -38.381813, 157.642288, 143.738770);
    usleep(22876); checkError();
    alSource3f(source, AL_POSITION, -38.381813, 157.642288, 143.738770);
    usleep(2753); checkError();
    alListener3f(AL_POSITION, -44.438198, 157.916870, 141.893951);
    usleep(41826); checkError();
    alListener3f(AL_POSITION, -48.353973, 158.094406, 140.701172);
    usleep(29362); checkError();
    alSource3f(source, AL_POSITION, -48.353973, 158.094406, 140.701172);
    usleep(2801); checkError();
    alListener3f(AL_POSITION, -54.321629, 158.370102, 138.410248);
    usleep(33139); checkError();
    alListener3f(AL_POSITION, -58.057201, 158.542679, 136.976196);
    usleep(23064); checkError();
    alSource3f(source, AL_POSITION, -58.057201, 158.542679, 136.976196);
    usleep(3227); checkError();
    alListener3f(AL_POSITION, -63.649216, 158.807846, 134.374542);
    usleep(34038); checkError();
    alListener3f(AL_POSITION, -67.008934, 158.967163, 132.811447);
    usleep(24214); checkError();
    alSource3f(source, AL_POSITION, -67.008934, 158.967163, 132.811447);
    usleep(2365); checkError();
    alListener3f(AL_POSITION, -71.856926, 159.204132, 130.169800);
    usleep(37815); checkError();
    alListener3f(AL_POSITION, -75.395470, 159.377090, 128.241669);
    usleep(32392); checkError();
    alSource3f(source, AL_POSITION, -75.395470, 159.377090, 128.241669);
    usleep(1556); checkError();
    alListener3f(AL_POSITION, -80.546356, 159.638763, 124.967522);
    usleep(38006); checkError();
    alListener3f(AL_POSITION, -84.355148, 159.832260, 122.546471);
    usleep(28598); checkError();
    alSource3f(source, AL_POSITION, -84.355148, 159.832260, 122.546471);
    usleep(2202); checkError();
    alListener3f(AL_POSITION, -90.090805, 160.278305, 118.259857);
    usleep(39698); checkError();
    alListener3f(AL_POSITION, -93.519226, 160.544922, 115.697586);
    usleep(30710); checkError();
    alSource3f(source, AL_POSITION, -93.519226, 160.544922, 115.697586);
    usleep(1472); checkError();
    usleep(860); checkError();
    alListener3f(AL_POSITION, -98.658379, 161.130157, 111.222786);
    usleep(38103); checkError();
    alListener3f(AL_POSITION, -101.986900, 161.509201, 108.324554);
    usleep(31485); checkError();
    alSource3f(source, AL_POSITION, -101.986900, 161.509201, 108.324554);
    usleep(1589); checkError();
    alListener3f(AL_POSITION, -106.992729, 162.174744, 103.237762);
    usleep(37120); checkError();
    alListener3f(AL_POSITION, -110.089096, 162.586411, 100.091316);
    usleep(24593); checkError();
    alSource3f(source, AL_POSITION, -110.089096, 162.586411, 100.091316);
    usleep(2061); checkError();
    alListener3f(AL_POSITION, -114.737961, 163.551804, 94.566017);
    usleep(38225); checkError();
    alListener3f(AL_POSITION, -117.236237, 164.070602, 91.596756);
    usleep(25019); checkError();
    alSource3f(source, AL_POSITION, -117.236237, 164.070602, 91.596756);
    usleep(2619); checkError();
    alListener3f(AL_POSITION, -120.808205, 165.081238, 86.698654);
    usleep(37689); checkError();
    alListener3f(AL_POSITION, -123.166237, 165.748413, 83.465172);
    usleep(31026); checkError();
    alSource3f(source, AL_POSITION, -123.166237, 165.748413, 83.465172);
    usleep(1650); checkError();
    alListener3f(AL_POSITION, -126.454720, 166.692657, 78.231743);
    usleep(37139); checkError();
    alListener3f(AL_POSITION, -128.699448, 167.337204, 74.659378);
    usleep(27945); checkError();
    alSource3f(source, AL_POSITION, -128.699448, 167.337204, 74.659378);
    usleep(3223); checkError();
    alListener3f(AL_POSITION, -131.802292, 168.183578, 68.828156);
    usleep(38892); checkError();
    alListener3f(AL_POSITION, -133.801773, 168.728973, 65.070503);
    usleep(28902); checkError();
    alSource3f(source, AL_POSITION, -133.801773, 168.728973, 65.070503);
    usleep(1964); checkError();
    alListener3f(AL_POSITION, -136.520248, 169.544739, 58.911835);
    usleep(31899); checkError();
    alListener3f(AL_POSITION, -138.056702, 170.005798, 55.431030);
    usleep(23662); checkError();
    alSource3f(source, AL_POSITION, -138.056702, 170.005798, 55.431030);
    usleep(2567); checkError();
    alListener3f(AL_POSITION, -140.039001, 170.683594, 49.988972);
    usleep(43368); checkError();
    alListener3f(AL_POSITION, -141.546310, 171.198990, 45.850914);
    usleep(29985); checkError();
    alSource3f(source, AL_POSITION, -141.546310, 171.198990, 45.850914);
    usleep(1625); checkError();
    alListener3f(AL_POSITION, -143.436188, 171.584518, 39.149841);
    usleep(31913); checkError();
    alListener3f(AL_POSITION, -144.509521, 171.803482, 35.344063);
    usleep(22723); checkError();
    alSource3f(source, AL_POSITION, -144.509521, 171.803482, 35.344063);
    usleep(2040); checkError();
    alListener3f(AL_POSITION, -145.757751, 171.979828, 29.368736);
    usleep(40306); checkError();
    alListener3f(AL_POSITION, -146.600311, 172.098862, 25.335371);
    usleep(26896); checkError();
    alSource3f(source, AL_POSITION, -146.600311, 172.098862, 25.335371);
    usleep(2708); checkError();
    alListener3f(AL_POSITION, -147.463959, 172.079498, 18.998528);
    usleep(34420); checkError();
    alListener3f(AL_POSITION, -148.005203, 172.067368, 15.027225);
    usleep(22340); checkError();
    usleep(70); checkError();
    usleep(2041); checkError();
    alListener3f(AL_POSITION, -148.648407, 159.148041, 10.181849);
}
